LINES = 31

all: demo-31

.SECONDARY:

edit:
	gvim -p Makefile demo.py amsload.py breaking_bad.asm compress.py compress.txt screenorder.py &

new:
	./gcr2.py

ASMS = $(wildcard *.asm)
COMPATS = $(patsubst %.asm,.deps/%.d,$(ASMS))

SCREENS_C = $(patsubst screens/%_scr.bin,cdt/%-31c.cdt,$(wildcard screens/*_scr.bin))
SCREENS64 = $(patsubst screens/%_scr.bin,cdt/%-64.cdt, $(wildcard screens/*_scr.bin))
SCREENS31 = $(patsubst screens/%_scr.bin,cdt/%-31.cdt, $(wildcard screens/*_scr.bin))
SCREENS   = $(SCREENS64) $(SCREENS31)

-include $(COMPATS)

screen: $(SCREENS)
	@true

comp: $(SCREENS_C)
	@true

%.txt: %.bin
	hexdump -C $< >$@

LK = 1 2 3 4 5 6 7 8 9 10 11 12 13

IMG =	\
	sequence/lightkeeper/build.done \
	sequence/bin_renderin/build.done \
	sequence/rose/build.done \
	intro.py

TUNES = hardstyle littlesailor cr4sh bonito seagulls

MUSIC = $(patsubst %,music/%-4000.bin,$(TUNES)) \
	$(patsubst %,music/%-5000.bin,$(TUNES))

img: $(IMG)
	@true

cdt/demo-%.cdt: demo.py cdt.py screens.py $(IMG) build/code-%.done $(MUSIC)
	@mkdir -p cdt
	./demo.py $@ $*

build/code-%.done: build/breaking_bad-%.exe \
		   build/textdraw-%.bin \
		   build/reboot-%.bin \
		   build/arkos_player-%.bin \
		   build/normal_to_overscan-%.bin \
		   build/overscan_to_normal-%.bin \
		   build/overscan_to_wideonly-%.bin \
		   build/wideonly_to_normal-%.bin \
		   build/remove_pen1-%.bin
	echo $* >$@

emu:
	nice wine ../cpc/wincpc/WinCPC.exe &

clean:
	rm -f cdt/*.wav cdt/*.au cdt/*.cdt
	rm -f -r .deps
	rm -f sequence/*/build.done

build/breaking_bad%.exe: build/breaking_bad%.pak build/unpacker-0600.bin
	cat build/unpacker-0600.bin $< >$@

%.pak: %.bin
	MegaLZ $< $@

.deps/%.d: %.asm
	@echo Making $@
	@mkdir -p .deps
	@(perl -ne '{if (/read\s"([^"]*)\.asm\"/) {print "build/$*.compat build/$*.bin: build/$$1.compat\n";}}' <$< | uniq ; echo .deps/$*.d: $*.asm ) >$@

build/symbols-32.compat: build/symbols_auto-31.compat build/symbols_auto-32.compat build/symbols_auto-64.compat
	touch $@

%-31.compat: %.compat
	@perl -pe '{s/symbols-32.compat/symbols_auto-31.compat/;if (/^line\s+equ/) {$$_="line equ 31\n";}}' <$< >$@

%-32.compat: %.compat
	@perl -pe '{s/symbols-32.compat/symbols_auto-32.compat/;if (/^line\s+equ/) {$$_="line equ 32\n";}}' <$< >$@

%-64.compat: %.compat
	@perl -pe '{s/symbols-32.compat/symbols_auto-64.compat/;if (/^line\s+equ/) {$$_="line equ 64\n";}}' <$< >$@

%-29.compat: %.compat
	@perl -pe '{s/symbols-32.compat/symbols_auto-31.compat/;if (/^line\s+equ/) {$$_="line equ 31\n";}}' <$< >$@

%-30.compat: %.compat
	@perl -pe '{s/symbols-32.compat/symbols_auto-31.compat/;if (/^line\s+equ/) {$$_="line equ 31\n";}}' <$< >$@

build/unpacker-%.compat: unpacker.asm Makefile
	@echo Making $@
	@mkdir -p build
	@perl -pe '{if (/^unpack\s+equ/) {$$_="unpack equ #$*\n";}}' <$< >$@

build/%.compat: %.asm
	@echo Making $@
	@mkdir -p build
	@perl -pe '{s/(read\s+\"playertest.asm\")/;$$1/;s/readbin/incbin/;s/read\s\"([^"]*)\.asm\"/include "build\/$$1.compat"/;s/([xy][lh])/i$$1/g;s/(add\s+)(i)?([xy][lh])/$$1a,i$$3/g;if (/WINCPC_FIX/){s/1717/0000/;};s/ld\s+pc,\s*(i[xy])/jp ($$1)/ig;s/i(i[xy][lh])/$$1/g;s/^\s+run\s+/;run /;s/run\s+#[0-9a-fA-F]+//;s/(incbin.*music)/;$$1/;}' <$< >$@

%.wincpc.asm: %.asm Makefile
	@echo Making $@
	@mkdir -p build
	perl -pe '{s/incbin/readbin/;s/i([xy][lh])/$$1/g;s/^\s+run\s+/;run /;$$a++;if (s/(((j[pr])|(djnz)).*)\$$(.*)$$/$$1 L$$a$$5/) {print "L$$a:\n";}}' <$< >$@
#s/(add\s+)(i)?([xy][lh])/$$1a,i$$3/g;if (/WINCPC_FIX/){s/1717/0000/;};s/ld\s+pc,\s*(i[xy])/jp ($$1)/ig;s/i(i[xy][lh])/$$1/g;s/run\s+#[0-9a-fA-F]+//;}' <$< >$@

%.bin %.sym: %.compat
	pasmo $< $*.bin $*.sym

%.au: %.cdt
	playtzx -au -freq 44100 $< $@

%.wav: %.au
	sox $< $@

%.play: cdt/%.wav
	aplay $<

%.comp: data/%.comp
	cat $<

%: cdt/%.cdt
	@true

build/symbols_auto-%.compat: build/breaking_bad-%.sym Makefile
	@echo ";Autogenerated from $<" >$@
	@echo "" >>$@
	@egrep "new_found_edge\s+" $< >>$@
	@egrep "_base\s+" $< >>$@
	@egrep "song_data\s+" $< >>$@
	@egrep "line\s+" $< >>$@
	@egrep "intvec_palette_vsync" $< >>$@
	@egrep "ay_tones_" $< >>$@
	@egrep "music_hook" $< >>$@
	@egrep "music_change_" $< >>$@
	@egrep "mainloop" $< >>$@
	@egrep "program_start" $< >>$@
#	@cat $@

symbols-32.asm: build/symbols_auto-32.compat Makefile
	perl -pe '{s/\s+EQU\s+([0-9A-Fa-f]*)[hH]/ equ #$$1/;}' <$< >$@

# special version that doesn't check block ID when loading
junk/breaking_bad.asm: breaking_bad.asm
	@perl -pe '{s/;WTO;//g;if (/WATCH_TAPE_TEST/) {$$_=" defs 2\n";}}' <$< >$@

################################################################################

%/build.done: %/build.sh
	./$<

################################################################################

%-1080.avi: %.avi
	rm -f $@
	avconv -i $< -s 1536x1080 -vf pad=1920:1080:192:0 -vcodec libx264 -preset slow -crf 22 -acodec copy $@

RELSRC = docs/breaking_baud.txt release/demo-20140419-1051-db6ff495ac125eb863b6a53eb426365e504347ac.cdt
breaking_baud_party_version.zip: $(RELSRC)
	rm -fr build/release
	mkdir -p build/release
	cp $(RELSRC) build/release/
	( cd build/release ; zip ../../$@ * )

zip: breaking_baud_party_version.zip

